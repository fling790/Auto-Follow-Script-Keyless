local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Auto Follow",
    LoadingTitle = "Auto Follow Script",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "AutoFollowSettings"
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)

local autoFollow = false
MainTab:CreateToggle({
    Name = "Auto Follow Nearest Player",
    CurrentValue = false,
    Callback = function(Value)
        autoFollow = Value
    end
})

-- Toggle with "X"
game:GetService("UserInputService").InputBegan:Connect(function(input, gpe)
    if not gpe and input.KeyCode == Enum.KeyCode.X then
        autoFollow = not autoFollow
    end
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Get nearest player function
local function getNearestPlayer()
    local lpChar = LocalPlayer.Character
    if not lpChar or not lpChar:FindFirstChild("HumanoidRootPart") then return nil end

    local lpPos = lpChar.HumanoidRootPart.Position
    local nearest = nil
    local nearestDist = math.huge

    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (p.Character.HumanoidRootPart.Position - lpPos).Magnitude
            if dist < nearestDist then
                nearest = p
                nearestDist = dist
            end
        end
    end

    return nearest
end

-- Follow Loop
task.spawn(function()
    while true do
        task.wait(0.1)

        if not autoFollow then continue end

        local lpChar = LocalPlayer.Character
        if not lpChar then continue end

        local lpHRP = lpChar:FindFirstChild("HumanoidRootPart")
        local lpHum = lpChar:FindFirstChildOfClass("Humanoid")
        if not lpHRP or not lpHum then continue end

        local target = getNearestPlayer()
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local tHRP = target.Character.HumanoidRootPart
            local tHum = target.Character:FindFirstChildOfClass("Humanoid")

            -- Match speed
            if tHum and lpHum.WalkSpeed ~= tHum.WalkSpeed then
                lpHum.WalkSpeed = tHum.WalkSpeed
            end

            -- Move to target
            local distance = (tHRP.Position - lpHRP.Position).Magnitude
            if distance > 0.5 then
                lpHum:MoveTo(tHRP.Position)
            else
                lpHum:Move(Vector3.zero, false)
            end

            -- Jump if they're airborne
            if tHum and tHum.FloorMaterial == Enum.Material.Air and lpHum.FloorMaterial ~= Enum.Material.Air then
                lpHum:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
end)
